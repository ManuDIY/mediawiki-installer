kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mysql-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: faster
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      imagePullSecrets:
      - name: local-registry
      containers:
      - image: mysql:5.6
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "password"
        - name: MYSQL_DATABASE
          value: "linxlabs"
        - name: MYSQL_USER
          value: "mediawiki"
        - name: MYSQL_PASSWORD
          value: "mediawiki"
        - name: MYSQL_SVC
          value: "mysql"
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-persistent-storage
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-persistent-storage
        persistentVolumeClaim:
          claimName: mysql-claim
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    tier: frontend
data:
  config : |
    server {
      index index.php index.html;
      error_log  /var/log/nginx/error.log;
      access_log /var/log/nginx/access.log;
      root /var/www/mediawiki;

      location / {
          try_files $uri $uri/ /index.php?$query_string;
      }

      location ~ \.php$ {
          try_files $uri =404;
          fastcgi_split_path_info ^(.+\.php)(/.+)$;
          fastcgi_pass 127.0.0.1:9000;
          fastcgi_index index.php;
          include fastcgi_params;
          fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
          fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mediawiki-www
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  storageClassName: faster
---
apiVersion: v1
kind: Service
metadata:
  name: mediawiki
spec:
  ports:
  - port: 80
  selector:
    tier: frontend
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mediawiki
  labels:
    tier: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mediawiki
      tier: frontend
  template:
    metadata:
      labels:
        app: mediawiki
        tier: frontend
    spec:
      imagePullSecrets:
      - name: local-registry
      containers:
      - name: mediawiki
        image: ansilh/mediawiki-frontend:0.0.1
        imagePullPolicy: Always
        command : ["/startup.sh"]
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: config
          mountPath: /etc/nginx/conf.d
        - name: www
          mountPath: /var/www/
      initContainers:
      - name: installer
        image: ansilh/mediawiki-installer:0.0.1
        imagePullPolicy: Always
        command: ["/install.sh"]
        volumeMounts:
        - name: www
          mountPath: /var/www/
      volumes:
      - name: www
        persistentVolumeClaim:
          claimName: mediawiki-www
      - name: config
        configMap:
          name: nginx-config
          items:
          - key: config
            path: site.conf
